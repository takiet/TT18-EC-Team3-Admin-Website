{"ast":null,"code":"import { currDate } from './../constants';\nimport moment from 'moment';\nexport const isLeapYear = year => {\n  return year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0 || year % 100 === 0 && year % 400 === 0;\n};\nexport const getFebDays = year => {\n  return isLeapYear(year) ? 29 : 28;\n};\nexport const daysOfMonth = (month, year) => {\n  let first_day = new Date(year, month, 1);\n  let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  let arrayDays = [];\n\n  for (let i = 0; i <= days_of_month[month] + first_day.getDay() - 2; i++) {\n    const timeData = {\n      day: i - first_day.getDay() + 2,\n      month,\n      year\n    };\n    arrayDays.push(timeData);\n  }\n\n  return arrayDays;\n};\nexport const checkEqualDate = time => {\n  if (time.getFullYear() === currDate.getFullYear() && time.getDate() === currDate.getDate() && time.getMonth() === currDate.getMonth()) {\n    return true;\n  }\n\n  return false;\n};\nexport const generateYearNextPerivous = year => {\n  let currYear = year || currDate.getFullYear();\n  const years = [];\n\n  for (let i = 0; i < 6; i++) {\n    years.push(currYear + i);\n    years.unshift(currYear - i);\n  }\n\n  return years;\n};\nexport const checkDaysOfMonth = (day, month, year) => {\n  let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (day > days_of_month[month - 1]) return false;\n  return true;\n};\nexport const translateDay = date => {\n  const day = moment(date).format('dddd');\n\n  if (day === 'Monday') {\n    return 'Thứ Hai';\n  }\n\n  if (day === 'Tuesday') {\n    return 'Thứ Ba';\n  }\n\n  if (day === 'Wednesday') {\n    return 'Thứ Tư';\n  }\n\n  if (day === 'Thursday') {\n    return 'Thứ Năm';\n  }\n\n  if (day === 'Friday') {\n    return 'Thứ Sáu';\n  }\n\n  if (day === 'Saturday') {\n    return 'Thứ Bảy';\n  }\n\n  if (day === 'Sunday') {\n    return 'Chủ Nhật';\n  }\n\n  return day;\n};\nexport const has31Days = month => {\n  if (month === 1) {\n    return true;\n  }\n\n  if (month === 3) {\n    return true;\n  }\n\n  if (month === 5) {\n    return true;\n  }\n\n  if (month === 7) {\n    return true;\n  }\n\n  if (month === 8) {\n    return true;\n  }\n\n  if (month === 10) {\n    return true;\n  }\n\n  if (month === 12) {\n    return true;\n  }\n\n  return false;\n};\nexport const regDate = new RegExp('^[0-9]+$'); // const getDate = (value: string): number => {\n//   const date = Number.parseInt(value.substring(0, 2));\n//   return date;\n// };\n// const getMonth = (value: string): number => {\n//   const month = Number.parseInt(value.substring(3, 5));\n//   return month;\n// };\n// const getYear = (value: string): number => {\n//   const year = Number.parseInt(value.substring(6, 10));\n//   return year;\n// };\n\nexport const checkDateInput = e => {\n  const value = e.target.value;\n\n  if (!value) {\n    return;\n  }\n\n  const splitValue = value.split('/');\n\n  if (!splitValue[0].includes('_')) {\n    const date = parseInt(splitValue[0]);\n\n    if (date > 31) {\n      e.target.value = '31/';\n      return;\n    }\n  }\n\n  if (!splitValue[1].includes('_')) {\n    const month = parseInt(splitValue[1]);\n    const date = parseInt(splitValue[0]);\n    const sliceDate = value.slice(0, 3);\n\n    if (month === 2 && date > 29) {\n      e.target.value = `29/0${month}/`;\n      return;\n    }\n\n    if (!has31Days(month) && date > 30) {\n      if (month < 10) {\n        e.target.value = `30/0${month}/`;\n      } else {\n        e.target.value = `30/${month}/`;\n      }\n    }\n\n    if (month > 12) {\n      e.target.value = sliceDate + `12/`;\n    }\n  }\n\n  if (!splitValue[2].includes('_')) {\n    const month = parseInt(splitValue[1]);\n    const date = parseInt(splitValue[0]);\n    const year = parseInt(splitValue[2]);\n\n    if (isLeapYear(year) && month === 2 && date > 29) {\n      e.target.value = `29/02/${year}`;\n    }\n\n    if (!isLeapYear(year) && month === 2 && date > 28) {\n      e.target.value = `28/02/${year}`;\n    }\n  }\n};\nexport const checkTimeInput = e => {\n  const value = e.target.value;\n\n  if (!value) {\n    return;\n  }\n\n  const valueSplit = value.split(':');\n\n  if (!valueSplit[0].includes('_')) {\n    const hour = Number.parseInt(valueSplit[0]);\n\n    if (hour > 23) {\n      e.target.value = '23:';\n      return;\n    }\n  }\n\n  if (!valueSplit[1].includes('_')) {\n    const munite = Number.parseInt(valueSplit[1]);\n\n    if (munite > 58) {\n      const muniteSlice = value.substring(0, 3);\n      e.target.value = muniteSlice + '59';\n    }\n  }\n};\nexport const calcDistanceDateTime = time => {\n  const prevTime = moment(time);\n  const today = moment(new Date());\n  const diff = today.diff(prevTime, 'minutes');\n  var numdays = Math.floor(diff / 1440);\n  var numhours = Math.floor(diff / 60);\n  var numminutes = diff;\n  if (numdays) return numdays + ' ngày trước';else if (numhours) return numhours + ' giờ trước';else if (numminutes) return numminutes + ' phút trước';else return 'Bây giờ';\n};\nexport const fromNowTranslation = (date = moment().fromNow(), now) => {\n  let result = moment(date).from(moment(now));\n  let output = '';\n\n  if (result.indexOf('a few seconds') >= 0 || result.indexOf('in a minute') >= 0) {\n    output = 'Vài giây trước';\n  }\n\n  if (result.indexOf('a minute ago') >= 0) output = result.replace('a minute ago', '1 phút trước');\n  if (result.indexOf('minutes ago') >= 0) output = result.replace('minutes ago', 'phút trước');\n  if (result.indexOf('an hour ago') >= 0) output = result.replace('an hour ago', '1 giờ trước');\n  if (result.indexOf('hours ago') >= 0) output = result.replace('hours ago', 'giờ trước');\n  if (result.indexOf('a day ago') >= 0) output = result.replace('a day ago', 'hôm qua');\n  if (result.indexOf('days ago') >= 0) output = result.replace('days ago', 'ngày trước');\n  if (result.indexOf('a month ago') >= 0) output = result.replace('a month ago', '1 tháng trước');\n  if (result.indexOf('months ago') >= 0) output = result.replace('months ago', 'tháng trước');\n  return output;\n};","map":{"version":3,"sources":["/Users/tim301248/Documents/TT18-EC-Team3-Admin-Website/src/helpers/time.ts"],"names":["currDate","moment","isLeapYear","year","getFebDays","daysOfMonth","month","first_day","Date","days_of_month","arrayDays","i","getDay","timeData","day","push","checkEqualDate","time","getFullYear","getDate","getMonth","generateYearNextPerivous","currYear","years","unshift","checkDaysOfMonth","translateDay","date","format","has31Days","regDate","RegExp","checkDateInput","e","value","target","splitValue","split","includes","parseInt","sliceDate","slice","checkTimeInput","valueSplit","hour","Number","munite","muniteSlice","substring","calcDistanceDateTime","prevTime","today","diff","numdays","Math","floor","numhours","numminutes","fromNowTranslation","fromNow","now","result","from","output","indexOf","replace"],"mappings":"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","sourcesContent":["import { currDate } from './../constants';\nimport moment from 'moment';\nimport { ChangeEvent } from 'react';\n\nexport const isLeapYear = (year: any) => {\n  return (\n    (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) ||\n    (year % 100 === 0 && year % 400 === 0)\n  );\n};\n\nexport const getFebDays = (year: any) => {\n  return isLeapYear(year) ? 29 : 28;\n};\n\nexport const daysOfMonth = (month: any, year: any) => {\n  let first_day = new Date(year, month, 1);\n  let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  let arrayDays = [];\n\n  for (let i = 0; i <= days_of_month[month] + first_day.getDay() - 2; i++) {\n    const timeData = {\n      day: i - first_day.getDay() + 2,\n      month,\n      year,\n    };\n    arrayDays.push(timeData);\n  }\n\n  return arrayDays;\n};\n\nexport const checkEqualDate = (time: Date) => {\n  if (\n    time.getFullYear() === currDate.getFullYear() &&\n    time.getDate() === currDate.getDate() &&\n    time.getMonth() === currDate.getMonth()\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const generateYearNextPerivous = (year?: number) => {\n  let currYear = year || currDate.getFullYear();\n  const years = [];\n\n  for (let i = 0; i < 6; i++) {\n    years.push(currYear + i);\n    years.unshift(currYear - i);\n  }\n\n  return years;\n};\n\nexport const checkDaysOfMonth = (day: any, month: any, year: any) => {\n  let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (day > days_of_month[month - 1]) return false;\n  return true;\n};\nexport const translateDay = (date: Date) => {\n  const day = moment(date).format('dddd');\n\n  if (day === 'Monday') {\n    return 'Thứ Hai';\n  }\n  if (day === 'Tuesday') {\n    return 'Thứ Ba';\n  }\n  if (day === 'Wednesday') {\n    return 'Thứ Tư';\n  }\n  if (day === 'Thursday') {\n    return 'Thứ Năm';\n  }\n  if (day === 'Friday') {\n    return 'Thứ Sáu';\n  }\n  if (day === 'Saturday') {\n    return 'Thứ Bảy';\n  }\n  if (day === 'Sunday') {\n    return 'Chủ Nhật';\n  }\n  return day;\n};\n\nexport const has31Days = (month: number) => {\n  if (month === 1) {\n    return true;\n  }\n  if (month === 3) {\n    return true;\n  }\n  if (month === 5) {\n    return true;\n  }\n  if (month === 7) {\n    return true;\n  }\n  if (month === 8) {\n    return true;\n  }\n  if (month === 10) {\n    return true;\n  }\n  if (month === 12) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const regDate = new RegExp('^[0-9]+$');\n\n// const getDate = (value: string): number => {\n//   const date = Number.parseInt(value.substring(0, 2));\n//   return date;\n// };\n// const getMonth = (value: string): number => {\n//   const month = Number.parseInt(value.substring(3, 5));\n//   return month;\n// };\n// const getYear = (value: string): number => {\n//   const year = Number.parseInt(value.substring(6, 10));\n//   return year;\n// };\nexport const checkDateInput = (e: ChangeEvent<HTMLInputElement>) => {\n  const value = e.target.value;\n  if (!value) {\n    return;\n  }\n  const splitValue = value.split('/');\n\n  if (!splitValue[0].includes('_')) {\n    const date = parseInt(splitValue[0]);\n    if (date > 31) {\n      e.target.value = '31/';\n      return;\n    }\n  }\n\n  if (!splitValue[1].includes('_')) {\n    const month = parseInt(splitValue[1]);\n    const date = parseInt(splitValue[0]);\n\n    const sliceDate = value.slice(0, 3);\n    if (month === 2 && date > 29) {\n      e.target.value = `29/0${month}/`;\n      return;\n    }\n    if (!has31Days(month) && date > 30) {\n      if (month < 10) {\n        e.target.value = `30/0${month}/`;\n      } else {\n        e.target.value = `30/${month}/`;\n      }\n    }\n    if (month > 12) {\n      e.target.value = sliceDate + `12/`;\n    }\n  }\n\n  if (!splitValue[2].includes('_')) {\n    const month = parseInt(splitValue[1]);\n    const date = parseInt(splitValue[0]);\n    const year = parseInt(splitValue[2]);\n\n    if (isLeapYear(year) && month === 2 && date > 29) {\n      e.target.value = `29/02/${year}`;\n    }\n    if (!isLeapYear(year) && month === 2 && date > 28) {\n      e.target.value = `28/02/${year}`;\n    }\n  }\n};\n\nexport const checkTimeInput = (e: ChangeEvent<HTMLInputElement>) => {\n  const value = e.target.value;\n  if (!value) {\n    return;\n  }\n  const valueSplit = value.split(':');\n\n  if (!valueSplit[0].includes('_')) {\n    const hour = Number.parseInt(valueSplit[0]);\n    if (hour > 23) {\n      e.target.value = '23:';\n      return;\n    }\n  }\n\n  if (!valueSplit[1].includes('_')) {\n    const munite = Number.parseInt(valueSplit[1]);\n    if (munite > 58) {\n      const muniteSlice = value.substring(0, 3);\n      e.target.value = muniteSlice + '59';\n    }\n  }\n};\n\nexport const calcDistanceDateTime = (time: string) => {\n  const prevTime = moment(time);\n  const today = moment(new Date());\n  const diff = today.diff(prevTime, 'minutes');\n\n  var numdays = Math.floor(diff / 1440);\n  var numhours = Math.floor(diff / 60);\n  var numminutes = diff;\n\n  if (numdays) return numdays + ' ngày trước';\n  else if (numhours) return numhours + ' giờ trước';\n  else if (numminutes) return numminutes + ' phút trước';\n  else return 'Bây giờ';\n};\n\nexport const fromNowTranslation = (date = moment().fromNow(), now: any) => {\n  let result = moment(date).from(moment(now));\n\n  let output = '';\n  if (result.indexOf('a few seconds') >= 0 || result.indexOf('in a minute') >= 0) {\n    output = 'Vài giây trước';\n  }\n\n  if (result.indexOf('a minute ago') >= 0) output = result.replace('a minute ago', '1 phút trước');\n\n  if (result.indexOf('minutes ago') >= 0) output = result.replace('minutes ago', 'phút trước');\n\n  if (result.indexOf('an hour ago') >= 0) output = result.replace('an hour ago', '1 giờ trước');\n\n  if (result.indexOf('hours ago') >= 0) output = result.replace('hours ago', 'giờ trước');\n\n  if (result.indexOf('a day ago') >= 0) output = result.replace('a day ago', 'hôm qua');\n\n  if (result.indexOf('days ago') >= 0) output = result.replace('days ago', 'ngày trước');\n\n  if (result.indexOf('a month ago') >= 0) output = result.replace('a month ago', '1 tháng trước');\n\n  if (result.indexOf('months ago') >= 0) output = result.replace('months ago', 'tháng trước');\n\n  return output;\n};\n"]},"metadata":{},"sourceType":"module"}